@model ExamDotNetMVC.Models.AddQuestion
@{
    ViewBag.Title = "Create";
}
<div class="container" style="box-shadow: 1px 1px 21px gray;padding: 15px;border-radius: 5px">
    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>AddQuestion</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.QLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QLevel, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea id="Question" name="Question"></textarea>
                @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })

            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<span class="col-md-2">@Html.RadioButtonFor(model => model.Type, "MCQ")MCQs</span>
                <span class="col-md-2">@Html.RadioButtonFor(model => model.Type, "BLANK")Blanks</span>*@
                @*@foreach (var type in Model.Type)
                {
                    <div class="col-md-10"><span class="col-md-2">@Html.RadioButtonFor(model => model.Type, type.ID)@type.Pattern</span></div>
                }*@
                <span class="col-md-2"><input type="radio" name="Type" value="MCQ" onclick="Add()" />MCQs</span>
                <span class="col-md-2"><input type="radio" name="Type" value="BLANK" onclick="Remove()" checked="checked" />Blank</span>
            </div>
        </div>
        <div id="MCQ" class="remove">
            <div class="form-group">
                @Html.LabelFor(model => model.OptionA, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea id="OptionA" name="OptionA"></textarea>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OptionB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea id="OptionB" name="OptionB"></textarea>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OptionC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea id="OptionC" name="OptionC"></textarea>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OptionD, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea id="OptionD" name="OptionD"></textarea>
                </div>
            </div>

        </div>
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Marks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Marks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Marks, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Explaination, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Explaination, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Explaination, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

<script>
    function Add() {
        document.getElementById('MCQ').style.display = 'block';
    }

    function Remove() {
        document.getElementById('MCQ').style.display = 'none';
    }
    //$(function () {
    //    $('#Question').froalaEditor();
    //});
</script>

<style>
    .remove {
        display: none;
    }
</style>

@Html.Partial("_ScriptSharing")
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
